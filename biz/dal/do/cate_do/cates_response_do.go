/* !!
 * Code generated by fkit
 * If you need to write additional functions, should create a separate file.
 * File Created: Sunday, 27 April 2025 15:51:44 +07:00
 * Author: VietLD (leduyviet2612@gmail.com)
 * -----
 * Last Modified: Sunday, 27 April 2025 15:51:44 +07:00
 * Modified By: HIEUBV\hieubv
 * -----
 * Copyright 2025. All rights reserved.
 */

package cate_do

import (
	"github.com/bachhieu/test/biz/dal/models"
)

type CateResponse struct {
	ID          string `json:"id" example:"01HFGRZQHPY8JHVRZ7NSRDGVB5"`
	Name        string `json:"name" example:"Andreanne Zieme"`
	Description string `json:"description" example:"blanditiis rerum illum maiores eveniet."`
	CreatedBy   string `json:"created_by" example:"5oWUyVnW"`
	CreatedTime int32  `json:"created_time" example:"130109267"`
	UpdatedTime int32  `json:"updated_time" example:"130109267"`
}

func NewCateResponse(md *models.CateMD) *CateResponse {
	if md == nil {
		return nil
	}

	return &CateResponse{
		ID:          md.ID,
		Name:        md.Name,
		Description: md.Description,
		CreatedBy:   md.CreatedBy,
		CreatedTime: md.CreatedTime,
		UpdatedTime: md.UpdatedTime,
	}
}

func NewCateResponses(mds []*models.CateMD) []*CateResponse {
	if len(mds) == 0 {
		return nil
	}

	res := make([]*CateResponse, 0, len(mds))
	for _, md := range mds {
		if r := NewCateResponse(md); r != nil {
			res = append(res, r)
		}
	}
	return res
}

// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "empty",
        "contact": {
            "name": "admin",
            "email": "admin@volio.vn"
        },
        "license": {
            "name": "GNU 3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/cates": {
            "put": {
                "description": "Update an existing Cate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cate"
                ],
                "summary": "Update Cate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Cate request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cate_do.UpdateCateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-cate_do_CateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Cate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cate"
                ],
                "summary": "Create Cate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Cate request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cate_do.CreateCateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-cate_do_CateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Cate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cate"
                ],
                "summary": "Delete Cate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cate ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/cates/detail": {
            "get": {
                "description": "Get list of Cate with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cate"
                ],
                "summary": "Get Cate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the Cate",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-cate_do_CateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/cates/pagination": {
            "get": {
                "description": "Get pagination of Cate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cate"
                ],
                "summary": "Get Pagination",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-array_cate_do_CateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/products": {
            "put": {
                "description": "Update an existing Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update Product",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update Product request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_do.UpdateProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-product_do_ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Product request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_do.CreateProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-product_do_ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete Product",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/products/detail": {
            "get": {
                "description": "Get list of Product with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the Product",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-product_do_ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/products/pagination": {
            "get": {
                "description": "Get pagination of Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Pagination",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-array_product_do_ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "put": {
                "description": "Update an existing User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update User request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_do.UpdateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-user_do_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/users/detail": {
            "get": {
                "description": "Get list of User with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of the User",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-user_do_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/users/pagination": {
            "get": {
                "description": "Get pagination of User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get Pagination",
                "parameters": [
                    {
                        "type": "string",
                        "default": "access_token",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-array_user_do_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/users/sign-in": {
            "post": {
                "description": "Sign in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign in User",
                "parameters": [
                    {
                        "description": " Sign in request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_do.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-user_do_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        },
        "/admin/users/sign-up": {
            "post": {
                "description": "Create a new User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create User request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_do.CreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v_api.Response-user_do_UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v_proto.VolioRpcError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "cate_do.CateResponse": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string",
                    "example": "5oWUyVnW"
                },
                "created_time": {
                    "type": "integer",
                    "example": 130109267
                },
                "description": {
                    "type": "string",
                    "example": "blanditiis rerum illum maiores eveniet."
                },
                "id": {
                    "type": "string",
                    "example": "01HFGRZQHPY8JHVRZ7NSRDGVB5"
                },
                "name": {
                    "type": "string",
                    "example": "Andreanne Zieme"
                },
                "updated_time": {
                    "type": "integer",
                    "example": 130109267
                }
            }
        },
        "cate_do.CreateCateReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "blanditiis rerum illum maiores eveniet."
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Andreanne Zieme"
                }
            }
        },
        "cate_do.UpdateCateReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "created_by": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "5oWUyVnW"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "blanditiis rerum illum maiores eveniet."
                },
                "id": {
                    "type": "string",
                    "example": "01HFGRZQHPY8JHVRZ7NSRDGVB5"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Andreanne Zieme"
                }
            }
        },
        "constant.ProviderUser": {
            "type": "string",
            "enum": [
                "internal",
                "google",
                "facebook"
            ],
            "x-enum-varnames": [
                "PROVIDER_USER_INTERNAL",
                "PROVIDER_USER_GOOGLE",
                "PROVIDER_USER_FACEBOOK"
            ]
        },
        "product_do.CreateProductReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "eaque ad est et impedit."
                },
                "display": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Obie Schroeder"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 858
                },
                "stock_quantity": {
                    "type": "integer",
                    "maximum": 1000000000,
                    "minimum": 0,
                    "example": 55
                }
            }
        },
        "product_do.ProductResponse": {
            "type": "object",
            "properties": {
                "created_by": {
                    "type": "string",
                    "example": "783"
                },
                "created_time": {
                    "type": "integer",
                    "example": 1738684701
                },
                "description": {
                    "type": "string",
                    "example": "eaque ad est et impedit."
                },
                "display": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "string",
                    "example": "01HFGRZQHPY8JHVRZ7NSRDGVB5"
                },
                "name": {
                    "type": "string",
                    "example": "Obie Schroeder"
                },
                "price": {
                    "type": "number",
                    "example": 858
                },
                "stock_quantity": {
                    "type": "integer",
                    "example": 55
                },
                "updated_time": {
                    "type": "integer",
                    "example": 1738684701
                }
            }
        },
        "product_do.UpdateProductReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "created_by": {
                    "type": "string",
                    "maxLength": 1000000000,
                    "minLength": 0,
                    "example": "783"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "eaque ad est et impedit."
                },
                "display": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "string",
                    "example": "01HFGRZQHPY8JHVRZ7NSRDGVB5"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Obie Schroeder"
                },
                "price": {
                    "type": "number",
                    "minimum": 0,
                    "example": 858
                },
                "stock_quantity": {
                    "type": "integer",
                    "maximum": 1000000000,
                    "minimum": 0,
                    "example": 55
                }
            }
        },
        "user_do.CreateUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "leannon.herminia@bxt.com"
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Mr. Cortez Nicolas II"
                },
                "password": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "9HZdzEr.uWct"
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "carroll.myrtle"
                }
            }
        },
        "user_do.Token": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "AccessToken"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "RefreshToken"
                }
            }
        },
        "user_do.UpdateUserReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "leannon.herminia@bxt.com"
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Mr. Cortez Nicolas II"
                },
                "id": {
                    "type": "string"
                },
                "password_hash": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "9HZdzEr.uWct"
                },
                "username": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "carroll.myrtle"
                }
            }
        },
        "user_do.UserResponse": {
            "type": "object",
            "properties": {
                "created_time": {
                    "type": "integer",
                    "example": 1005708562
                },
                "email": {
                    "type": "string",
                    "example": "leannon.herminia@bxt.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "Mr. Cortez Nicolas II"
                },
                "id": {
                    "type": "string",
                    "example": "01HFGRZQHPY8JHVRZ7NSRDGVB5"
                },
                "provider": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constant.ProviderUser"
                        }
                    ],
                    "example": "internal"
                },
                "role": {
                    "type": "string",
                    "example": "pjOh1Jty"
                },
                "token": {
                    "$ref": "#/definitions/user_do.Token"
                },
                "updated_time": {
                    "type": "integer",
                    "example": 1005708562
                },
                "username": {
                    "type": "string",
                    "example": "carroll.myrtle"
                }
            }
        },
        "v_api.Paging": {
            "type": "object",
            "properties": {
                "current_offset": {
                    "description": "for load more",
                    "type": "integer"
                },
                "current_page": {
                    "description": "for page",
                    "type": "integer"
                },
                "limit": {
                    "description": "for load more",
                    "type": "integer"
                },
                "next_offset": {
                    "description": "for load more",
                    "type": "integer"
                },
                "next_page": {
                    "description": "for page",
                    "type": "integer"
                },
                "page_size": {
                    "description": "for page",
                    "type": "integer"
                },
                "prev_page": {
                    "description": "for page",
                    "type": "integer"
                },
                "total": {
                    "description": "total items",
                    "type": "integer"
                },
                "total_pages": {
                    "description": "for page",
                    "type": "integer"
                }
            }
        },
        "v_api.Response-array_cate_do_CateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cate_do.CateResponse"
                    }
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-array_product_do_ProductResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product_do.ProductResponse"
                    }
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-array_user_do_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_do.UserResponse"
                    }
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-cate_do_CateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/cate_do.CateResponse"
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-product_do_ProductResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/product_do.ProductResponse"
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_api.Response-user_do_UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user_do.UserResponse"
                },
                "data_extend": {},
                "description": {
                    "type": "string"
                },
                "encryption": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "paging": {
                    "$ref": "#/definitions/v_api.Paging"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "v_proto.VolioRpcError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v_proto.VolioRpcErrorDetail"
                    }
                },
                "error_code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "wait_for": {
                    "type": "integer"
                }
            }
        },
        "v_proto.VolioRpcErrorDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "3.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Test API",
	Description:      "Tài liệu kết nối Test API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

/* !!
 * Code generated by fkit
 * If you need to write additional functions, should create a separate file.
 * File Created: Sunday, 27 April 2025 14:19:49 +07:00
 * Author: VietLD (leduyviet2612@gmail.com)
 * -----
 * Last Modified: Sunday, 27 April 2025 14:19:49 +07:00
 * Modified By: HIEUBV\hieubv
 * -----
 * Copyright 2025. All rights reserved.
 */

package server

import (
	"github.com/bachhieu/fountain/baselib/env"
	"github.com/bachhieu/fountain/baselib/redis_client"
	"github.com/bachhieu/fountain/baselib/sql_client"
	"github.com/bachhieu/fountain/baselib/v_log"
	"github.com/bachhieu/fountain/baselib/v_net/v_api"
	f_dao "github.com/bachhieu/fountain/biz/dal/dao"
	"github.com/bachhieu/fountain/biz/f_core"
	"github.com/bachhieu/fountain/biz/f_core/health_check"
	"github.com/bachhieu/test/biz/dal/dao"
	cates_handler "github.com/bachhieu/test/server/cates"
	products_handler "github.com/bachhieu/test/server/products"
	users_handler "github.com/bachhieu/test/server/users"
	"github.com/gofiber/fiber/v2"

	_ "github.com/bachhieu/test/biz"
)

type TestServer struct {
	ApiServer *v_api.VolioAPI

	controllers []f_core.CoreController

	// Fountain Controller
	healthCheckController *health_check.HealthCheckController

	// Handler

	usersHandler    *users_handler.UsersAPI
	catesHandler    *cates_handler.CatesAPI
	productsHandler *products_handler.ProductsAPI
}

func NewTestServer() *TestServer {
	return &TestServer{}
}

func (s *TestServer) GetIdentification() (addr, dcName, serviceName, serverID string) {
	return env.Addr, env.DCName, env.ServiceName, env.PodName
}

func (s *TestServer) Initialize() error {
	s.ApiServer = v_api.NewVolioAPI(fiber.Config{})

	redis_client.InstallClientManager()
	sql_client.InstallClientManager("postgresql")

	dao.InstallRedisDAOManager(redis_client.GetClientManager())
	f_dao.InstallRedisDAOManager(redis_client.GetClientManager())
	dao.InstallPostgresDAOManager(sql_client.GetClientManager())

	// Install controllers
	s.controllers = f_core.InstallCoreControllers()

	s.usersHandler = users_handler.NewUsersAPI(s.controllers)

	s.catesHandler = cates_handler.NewCatesAPI(s.controllers)

	s.productsHandler = products_handler.NewProductsAPI(s.controllers)

	// Install handler

	return nil

}

func (s *TestServer) RunLoop() {
	for _, ctr := range s.controllers {
		switch controller := ctr.(type) {
		case *health_check.HealthCheckController:
			v_log.V(3).Infof("storeProServer::RunLoop installed: %T", controller)
			s.healthCheckController = controller
		}
	}

	s.initRouter()

	go s.ApiServer.Serve()
}

func (s *TestServer) Destroy() {
	s.ApiServer.Stop()
}

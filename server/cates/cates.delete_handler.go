/* !!
 * Code generated by fkit
 * If you need to write additional functions, should create a separate file.
 * File Created: Sunday, 27 April 2025 15:51:44 +07:00
 * Author: VietLD (leduyviet2612@gmail.com)
 * -----
 * Last Modified: Sunday, 27 April 2025 15:51:44 +07:00
 * Modified By: HIEUBV\hieubv
 * -----
 * Copyright 2025. All rights reserved.
 */

package cates

import (
	"github.com/bachhieu/fountain/baselib/v_log"
	"github.com/bachhieu/fountain/baselib/v_net/v_api"
	"github.com/bachhieu/fountain/proto/v_proto"
	"github.com/gofiber/fiber/v2"
)

// @Summary      Delete Cate
// @Description  Delete an existing Cate
// @Tags         Cate
// @Accept       json
// @Produce      json
// @Param        Authorization  header    string  true  "Insert your access token" default(access_token)
// @Param        id     query     string  true  "Cate ID"
// @Success      200          {object}  v_api.Response[string]
// @Failure      400          {object}  v_proto.VolioRpcError
// @Failure      500          {object}  v_proto.VolioRpcError
// @Router       /admin/cates [delete]
func (api *CatesAPI) Delete(ctx *fiber.Ctx) error {
	id := ctx.Query("id")
	if id == "" {
		err := v_proto.NewRpcError(int32(v_proto.VolioRpcErrorCodes_BAD_REQUEST), "id is required")
		v_log.V(1).WithError(err).Errorf("CatesAPI::Delete - Error: %+v", err)
		return v_api.WriteError(ctx, err)
	}
	if err := api.catesController.Delete(id); err != nil {
		v_log.V(1).WithError(err).Errorf("CatesAPI::Delete - Error: %+v", err)
		return v_api.WriteError(ctx, err)
	}

	v_log.V(3).Infof("CatesAPI::Delete - Reply: Oke")

	return v_api.WriteSuccess(ctx, "Deleted successfully")
}

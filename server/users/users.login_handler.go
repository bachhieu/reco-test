/* !!
 * Code generated by fkit
 * If you need to write additional functions, should create a separate file.
 * File Created: Sunday, 27 April 2025 14:28:41 +07:00
 * Author: VietLD (leduyviet2612@gmail.com)
 * -----
 * Last Modified: Sunday, 27 April 2025 14:28:41 +07:00
 * Modified By: HIEUBV\hieubv
 * -----
 * Copyright 2025. All rights reserved.
 */

package users

import (
	"github.com/bachhieu/fountain/baselib/v_log"
	"github.com/bachhieu/fountain/baselib/v_net/v_api"
	"github.com/bachhieu/fountain/proto/v_proto"
	"github.com/bachhieu/test/biz/dal/do/user_do"
	"github.com/gofiber/fiber/v2"
)

// @Summary      Sign in User
// @Description   Sign in
// @Tags         User
// @Accept       json
// @Produce      json
// @Param        request       body      user_do.CreateUserReq  true  " Sign in request"
// @Success      200          {object}  v_api.Response[user_do.UserResponse]
// @Failure      400          {object}  v_proto.VolioRpcError
// @Failure      500          {object}  v_proto.VolioRpcError
// @Router       /admin/users/sign-in [post]
func (api *UsersAPI) SignIn(ctx *fiber.Ctx) error {
	input := &user_do.CreateUserReq{}

	if err := ctx.BodyParser(input); err != nil {
		err := v_proto.NewRpcError(int32(v_proto.VolioRpcErrorCodes_BAD_REQUEST), err.Error())
		v_log.V(1).WithError(err).Errorf("UsersAPI::Create - Error: %+v", err)
		return v_api.WriteError(ctx, err)
	}

	if input.Email == "" || input.Password == "" {
		return v_api.WriteError(ctx, v_proto.NewRpcError(int32(v_proto.VolioRpcErrorCodes_BAD_REQUEST), "email and password is required!"))
	}

	res, err := api.usersController.SignIn(input)
	if err != nil {
		v_log.V(1).WithError(err).Errorf("UsersAPI::Create - Error: %+v", err)
		return v_api.WriteError(ctx, err)
	}

	if err := res.RegisterToken(); err != nil {
		v_log.V(1).WithError(err).Errorf("UsersAPI::Create - Error: %+v", err)
		return v_api.WriteError(ctx, v_proto.NewRpcError(int32(v_proto.VolioRpcErrorCodes_BAD_REQUEST), err.Error()))

	}

	return v_api.WriteSuccess(ctx, res)
}
